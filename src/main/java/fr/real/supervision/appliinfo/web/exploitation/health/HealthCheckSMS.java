package fr.real.supervision.appliinfo.web.exploitation.health;

import fr.real.supervision.appliinfo.connector.sms.SmsProperties;
import fr.real.supervision.appliinfo.connector.sms.model.SmsApiResponse;
import fr.real.supervision.appliinfo.connector.sms.model.SmsRequest;
import kong.unirest.HttpResponse;
import kong.unirest.Unirest;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.actuate.health.Health;
import org.springframework.boot.actuate.health.HealthIndicator;
import org.springframework.stereotype.Component;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;


@Component("SMS")
public class HealthCheckSMS implements HealthIndicator {

	private static final Logger LOGGER = LoggerFactory.getLogger(HealthCheckSMS.class);

	@Autowired
	SmsProperties properties;

	@Override
	public Health health() {
		if (!checkSMS()) {
			return Health.down().withDetail("Server SMS", "Not Available").build();
		}
		return Health.up().withDetail("Server SMS", "Available").build();
	}

	private boolean checkSMS() {

		boolean result = false;

		try {

			LOGGER.info("Simulation d'envoi de SMS a SMS Factor au 33xxxxxxxxx pour verifier le fonctionnement du service");

			SmsRequest smsRequest = new SmsRequest("33xxxxxxxxx", "Message");

			String parametersEncoded = URLEncoder.encode(smsRequest.getContent(), StandardCharsets.UTF_8.toString());

			String encodedUrl = String.format("%s/%s?text=%s&to=%s",
					properties.getApiUrl(),
					"send/simulate",
					parametersEncoded,
					smsRequest.getTo());

			HttpResponse<SmsApiResponse> response = Unirest.get(encodedUrl)
					.header("Authorization", String.format("Bearer %s", properties.getApiToken()))
					.header("Accept", "application/json")
					.asObject(SmsApiResponse.class);


			// La reponse a la simulation SMS doit avoir un statut 1, et message OK
			if(response.getBody().getStatus() == 1 && "OK".equals(response.getBody().getMessage())){
				result = true;
			}

		} catch (Exception e) {
			LOGGER.error("la requete au serveur SMS a echoue",e);
		}

		return result;
	}

}
